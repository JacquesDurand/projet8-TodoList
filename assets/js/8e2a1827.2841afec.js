"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[731],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>m});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=n.createContext({}),u=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},c=function(e){var r=u(e.components);return n.createElement(p.Provider,{value:r},e.children)},l={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(t),m=a,y=d["".concat(p,".").concat(m)]||d[m]||l[m]||o;return t?n.createElement(y,s(s({ref:r},c),{},{components:t})):n.createElement(y,s({ref:r},c))}));function m(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=d;var i={};for(var p in r)hasOwnProperty.call(r,p)&&(i[p]=r[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var u=2;u<o;u++)s[u]=t[u];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3646:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var n=t(7462),a=(t(7294),t(3905));const o={sidebar_position:4},s="Users",i={unversionedId:"app/security/users",id:"app/security/users",title:"Users",description:"The users in our system are persisted via Doctrine",source:"@site/docs/app/security/users.md",sourceDirName:"app/security",slug:"/app/security/users",permalink:"/projet8-TodoList/docs/app/security/users",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"DocumentationApp",previous:{title:"Authentication Vs Authorization",permalink:"/projet8-TodoList/docs/app/security/authent_vs_autho"},next:{title:"Performances and Quality",permalink:"/projet8-TodoList/docs/category/performances-and-quality"}},p={},u=[],c={toc:u};function l(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"users"},"Users"),(0,a.kt)("p",null,"The users in our system are persisted via ",(0,a.kt)("a",{parentName:"p",href:"https://www.doctrine-project.org/"},"Doctrine"),"\ninto our PostgreSql database.",(0,a.kt)("br",{parentName:"p"}),"\n","As requested, only the administrators have the rights to manage (Create, Edit, Delete) Users.\nNevertheless, to be able to understand the application correctly, every developer working on this\napp has the possibility to load ",(0,a.kt)("strong",{parentName:"p"},"Fixtures"),", aka fake data, into the database, and notably users\nof different kind, as shown in ",(0,a.kt)("inlineCode",{parentName:"p"},"fixtures/user.yaml"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"App\\Entity\\User:\n    user_{1..9}:\n        userName: <name()>\n        password: <hashPassword(word())>\n        email: <email()>\n        roles: ['ROLE_USER']\n    user_test:\n        userName: 'admin'\n        password: <hashPassword('Azerty123*')>\n        email: 'admin@admin.com'\n        roles: ['ROLE_ADMIN']\n    user_test_2:\n        userName: 'admin2'\n        password: <hashPassword('Azerty123*')>\n        email: 'admin2@admin.com'\n        roles: ['ROLE_ADMIN']\n    user_test_non_admin:\n        username: 'random'\n        password: <hashPassword('Azerty123*')>\n        email: 'random@random.com'\n        roles: [ 'ROLE_USER' ]\n    user_anon:\n        username: 'Anonymous'\n        password: <hashPassword('@nonymou$')>\n        email: 'anon@anon.com'\n        roles: [ 'ROLE_USER' ]\n")),(0,a.kt)("p",null,"2 Admins, 1 Anonymous User, 1 random (but authenticable non-admin User), and a few fillers."))}l.isMDXComponent=!0}}]);